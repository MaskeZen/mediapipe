// Copyright 2019 The MediaPipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "mediapipe/framework/api2/node.h"
#include "mediapipe/framework/calculator_framework.h"

namespace mediapipe {
namespace api2 {

class LogInputCalculator : public Node {
 public:
  static constexpr Input<std::pair<int, int>> kInSize{"SIZE"};
  
//   static constexpr Output<std::pair<int, int>> kOut{"SIZE"};

  MEDIAPIPE_NODE_CONTRACT(kInSize);

  static absl::Status UpdateContract(CalculatorContract* cc) {
    return absl::OkStatus();
  }

  absl::Status Process(CalculatorContext* cc) override {
    
    // const std::pair<int, int> image_size = *kInSize(cc);
    
    // LOG(INFO) << image_size.first;
    // LOG(INFO) << image_size.second;

    // std::pair<int, int> size;
    // kOut(cc).Send(size);

    return absl::OkStatus();
  }
};

MEDIAPIPE_REGISTER_NODE(LogInputCalculator);

}  // namespace api2
}  // namespace mediapipe
